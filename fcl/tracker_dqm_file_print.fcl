# -*- mode:tcl -*- 
#------------------------------------------------------------------------------
# P.M.
# module labels can't have underscores in them....
# when running the ARTDAQ 'demo' example, at any time, can submit in a separate window 
# a DQM client (of course, setup the Mu2e online environment first): 
# 
# mu2e -c config/demo/dqm_client01.fcl
#
# the job will be just receiving events and filling a few histograms shown on two canvases:
# - http://localhost:8877/win1/
# - http://localhost:8877/win2/
#------------------------------------------------------------------------------
# #include "Offline/fcl/minimalMessageService.fcl"# 
#include "Offline/fcl/standardProducers.fcl"
#include "Offline/fcl/standardServices.fcl"
#------------------------------------------------------------------------------
process_name: TrackerDQM

#------------------------------------------------------------------------------
source: { module_type : RootInput
#    fileNames: [ "/scratch/mu2e/mu2etrk_pasha_020/demo/data/artdaqdemo_r000018_sr01_20231225T162134_1_dl1.root" ]
#   # maxEvents : 1000
}

#------------------------------------------------------------------------------
# output
#------------------------------------------------------------------------------
#outputs: {
#    dumpOutput: { module_type : FileDumperOutput
#        wantProductFriendlyClassName : true
#    }
#}
#------------------------------------------------------------------------------
# job configuration
#------------------------------------------------------------------------------
physics: {
    producers: {}

    analyzers: {
        trackerDQM : { module_type:TrackerDQM
            analyzeFragments    : 0           ## set to 0 to print only
#------------------------------------------------------------------------------
#	    diagLevel           : 2           # print one line per event
#	    diagLevel           : 3           # print the whole event in hex
#------------------------------------------------------------------------------
            diagLevel           : 10          ## print all events
            minNBytes           : -1
            maxNBytes           : 1000000
            maxFragmentSize     : 20000       ## to catch obvious errors
#------------------------------------------------------------------------------
# old format: offset 0x00 :  0  (16 bytes = (0x00 + 0x08) in 2-byte words)
# new format: offset 0x20 : 40  (80 bytes = (0x20 + 0x08) in 2-byte words)
# currently redefined in beginRun
#------------------------------------------------------------------------------
            dataHeaderOffset    : 32
            dumpDTCRegisters    :  0
#------------------------------------------------------------------------------
# reference channel to calculate dt(i) = T(0,i)-T(0,referenceChannel)
# reference channel number is run-dependent
#------------------------------------------------------------------------------
            activeLinks         : [ 0 ]
            refChCal            : [ 0 , 91, 91, 91, 91, 91 ]
            refChHV             : [ 0 , 94, 94, 94, 94, 94 ]
#------------------------------------------------------------------------------
# if rootMacro is non-empty, it defines the name of a ROOT macro to be executed 
# in interpreted mode in the art event loop
# see https://github.com/Mu2e/Stntuple/blob/muse/doc/event_display.org#plugins
#------------------------------------------------------------------------------
            timeWindow          : 2000
            pulserFrequency     :  250
            nSamplesBL          : 10
            minPulseHeight      : 5.
            port                : 8877
            plotWaveforms       : [ -1, -1]  ## nothing
        }
    }

    p1            : [    ]
    trigger_paths : [ p1 ]

    e1            : [ trackerDQM ]
    end_paths     : [ e1 ]
}

#------------------------------------------------------------------------------
services.TFileService.fileName : "trackerDQM_%06r.root"
services.scheduler.wantSummary : true
