# -*- mode:tcl -*- 
#------------------------------------------------------------------------------
# usage: artdaqDriver -c driver_tracker_vst.fcl
#------------------------------------------------------------------------------
process_name: DriverTrackerVst

events_to_generate: 1
run_number        : 101

source: {
    module_type: "ArtdaqInput"
}

services: {
    ArtdaqFragmentNamingServiceInterface: {
	helper_plugin: "Mu2e"
	service_provider: "ArtdaqFragmentNamingService"
    }
    ArtdaqSharedMemoryServiceInterface: {
	resume_after_timeout: false
	service_provider: "ArtdaqSharedMemoryService"
	waiting_time: 1
    }

    DbService: {
	dbName: "mu2e_conditions_prd"
	purpose: "EMPTY"
	verbose: 0
	version: ""
    }
    GeometryService: {
	inputFile: "Offline/Mu2eG4/geom/geom_common.txt"
	simulatedDetector: {
	    tool_type: "Mu2e"
	}
    }
    GlobalConstantsService: {
	inputFile: "Offline/Mu2eG4/test/globalConstants_01.txt"
    }
    ProditionsService: {
    }
}


fragment_receiver: {
    generator              : TrackerBR        ## defines the shared lib to load
    fragment_type          : "Mu2e"           ## generator data fragment type - what does "Mu2e" mean?

    sleepTimeMs            : 10               ## 10 ms : make sure the input rate is < 100 Hz
    tfmHost                : "mu2edaq09-ctrl"
                                                  ## DTC : PCIE=0
    pcieAddr               : 0                ## P.Murat: DTC0@daq22 : TS1
    linkMask               : 0x01             ## P.Murat: roc0@DTC0

    readData               : 1                ## 1:read data, 0:fake data fragment with one 4-byte word
    resetROC               : 1                ## 1: do reset ROC for each event
    readoutMode            : 0                ## 0:read digis
    max_fragment_size_bytes: 0x100000         ## = 1048576
    maxEventsPerSubrun     : 500000           ## 500K events/subrun

    readDTCRegisters             : 0          ## 1
        #  generated_fragments_per_event: 2          ## shouldn't need that any longer 
    fragment_ids                 : [ 0, 11 ]  ## fake data + registers   

    nEventsDbg                   : 10         ## don't need to dump more
    debugLevel                   : 1
    printFreq                    : 10000
    generator              : TrackerBR   #daq generator plug-in type
    fragment_type          : Mu2e        #generator data fragment type

    max_fragment_size_bytes: 0x100000
    
    destinations: {
    }

    routing_table_config: {
        use_routing_manager: false
    } 
}

event_builder: {
    art_analyzer_count                    : 1
    buffer_count                          : 20
    end_of_data_wait_s                    : 600
    events_expected_in_SimpleQueueReader  : 5
    expected_art_event_processing_time_us : 3e7
    expected_fragments_per_event          : 1
    max_fragment_size_bytes               : 1.048576e6
    print_event_store_stats               : false
    routing_token_config: {
        use_routing_manager: false
    }
    sources: {}
    use_art: true
    verbose: false
}

physics: {
    analyzers:   {
        a1:    {
            module_type: OfflineFragmentsDumper
        }
    }

    t1: [a1]
}

outputs: {
    rootout: { module_type : RootDAQOut
        fileName         : "driver_tracker_br.root"
        compressionLevel : 501
    }

    out1: { module_type : FileDumperOutput
        wantProductFriendlyClassName: true
    }
}


# outputs: {
#     rootNetOutput: {
# 	SelectEvents: []
# 	destinations: {}
# 	host_map: []
# 	module_type: "RootNetOutput"
# 	outputCommands: [
# 			 "drop *_*_*_*",
# 			 "keep mu2e::IntensityInfo*_*_*_*",
# 			 "keep mu2e::CaloHits_CaloHitMakerFast_caphri_*"
# 			]
# 	routing_table_config: {
# 	    use_routing_manager: false
# 	}
#     }
# }


