#+startup:fold -*- buffer-read-only: t -*-
* ------------------------------------------------------------------------------
* startup checks                                                             
** 1. check version of the DTC firmware                                      
- the last working and mostly used version : 0x23090211
#+begin_src
mu2etrk@mu2edaq09:~/test_stand/pasha_018>my_cntl read 0x9004
0x23090211
sts=0
#+end_src
** 2. check locked fibers                                                    
#+begin_src 
mu2etrk@mu2edaq09:~/test_stand/pasha_018>my_cntl read 0x9140
0x00000011
sts=0
#+end_src
** 3. check ROC pattern readout                                              
#+begin_src                                                                   
mu2etrk@mu2edaq09:~/test_stand/pasha_018>srcs/otsdaq_mu2e_tracker/scripts/var_pattern_config.sh 0 0
 
Disabling EWMs
sts=0
EWM deltaT set to 0x00000000 sts=0
 
Resetting 0
Configuring link 0 to send patterns
Configuring STATUS_BIT in MODE 0::
 ie STATUS_BIT=0x55
... now sleep for 2 seconds
mu2etrk@mu2edaq09:~/test_stand/pasha_018>mu2eUtil -q 10 -N buffer_test -D 600 -n 3
08-23 08:34:05.384310                      DTC_Registers     INFO DTC_Registers(...): DTC Sim Mode is NoCFO
08-23 08:34:05.384426                      DTC_Registers     INFO DTC_Registers(...): DTC ID is 1
08-23 08:34:05.384446                      DTC_Registers     INFO SetSimMode(...): Initializing device, sim mode is NoCFO
08-23 08:34:05.398122                            DTC.cpp     INFO DTC(...): CONSTRUCTOR
08-23 08:34:05.404393                           mu2eUtil     INFO buffer_test(): Buffer Read 0
08-23 08:34:05.404436                           mu2eUtil     INFO (...): Buffer reports DMA size of 112 bytes. Device driver reports read of 112 bytes,
08-23 08:34:05.410149                          DTC_Types     INFO PrintBuffer(...): 0x000000: 0070 0000 0000 0000 0068 0000 0013 0000 
08-23 08:34:05.410175                          DTC_Types     INFO PrintBuffer(...): 0x000010: 0000 ff01 ffff ffff 0000 0000 0100 0000 
08-23 08:34:05.410182                          DTC_Types     INFO PrintBuffer(...): 0x000020: 0050 0000 0013 0000 0000 ff01 ffff ffff 
08-23 08:34:05.410188                          DTC_Types     INFO PrintBuffer(...): 0x000030: 0000 0000 0000 0000 0000 0000 0000 01ee 
08-23 08:34:05.410193                          DTC_Types     INFO PrintBuffer(...): 0x000040: 0030 8050 0002 0013 0000 0000 0055 0000 
08-23 08:34:05.410198                          DTC_Types     INFO PrintBuffer(...): 0x000050: 0000 0000 0001 0000 0002 0000 0003 0000 
08-23 08:34:05.410203                          DTC_Types     INFO PrintBuffer(...): 0x000060: 0004 0000 0005 0000 0006 0000 0007 0000 
08-23 08:34:05.410213                           mu2eUtil     INFO buffer_test(): Buffer Read 1
08-23 08:34:05.410220                           mu2eUtil     INFO (...): Buffer reports DMA size of 144 bytes. Device driver reports read of 144 bytes,
08-23 08:34:05.410227                          DTC_Types     INFO PrintBuffer(...): 0x000000: 0090 0000 0000 0000 0088 0000 0014 0000 
08-23 08:34:05.410233                          DTC_Types     INFO PrintBuffer(...): 0x000010: 0000 ff01 ffff ffff 0000 0000 0100 0000 
08-23 08:34:05.410238                          DTC_Types     INFO PrintBuffer(...): 0x000020: 0070 0000 0014 0000 0000 ff01 ffff ffff 
08-23 08:34:05.410243                          DTC_Types     INFO PrintBuffer(...): 0x000030: 0000 0000 0000 0000 0000 0000 0000 01ee 
08-23 08:34:05.410249                          DTC_Types     INFO PrintBuffer(...): 0x000040: 0050 8050 0004 0014 0000 0000 0055 0000 
08-23 08:34:05.410254                          DTC_Types     INFO PrintBuffer(...): 0x000050: 0008 0000 0009 0000 000a 0000 000b 0000 
08-23 08:34:05.410259                          DTC_Types     INFO PrintBuffer(...): 0x000060: 000c 0000 000d 0000 000e 0000 000f 0000 
08-23 08:34:05.410264                          DTC_Types     INFO PrintBuffer(...): 0x000070: 0010 0000 0011 0000 0012 0000 0013 0000 
08-23 08:34:05.410270                          DTC_Types     INFO PrintBuffer(...): 0x000080: 0014 0000 0015 0000 0016 0000 0017 0000 
08-23 08:34:05.410276                           mu2eUtil     INFO buffer_test(): Buffer Read 2
08-23 08:34:05.410282                           mu2eUtil     INFO (...): Buffer reports DMA size of 176 bytes. Device driver reports read of 176 bytes,
08-23 08:34:05.410288                          DTC_Types     INFO PrintBuffer(...): 0x000000: 00b0 0000 0000 0000 00a8 0000 0015 0000 
08-23 08:34:05.410293                          DTC_Types     INFO PrintBuffer(...): 0x000010: 0000 ff01 ffff ffff 0000 0000 0100 0000 
08-23 08:34:05.410299                          DTC_Types     INFO PrintBuffer(...): 0x000020: 0090 0000 0015 0000 0000 ff01 ffff ffff 
08-23 08:34:05.410304                          DTC_Types     INFO PrintBuffer(...): 0x000030: 0000 0000 0000 0000 0000 0000 0000 01ee 
08-23 08:34:05.410309                          DTC_Types     INFO PrintBuffer(...): 0x000040: 0070 8050 0006 0015 0000 0000 0055 0000 
08-23 08:34:05.410314                          DTC_Types     INFO PrintBuffer(...): 0x000050: 0018 0000 0019 0000 001a 0000 001b 0000 
08-23 08:34:05.410319                          DTC_Types     INFO PrintBuffer(...): 0x000060: 001c 0000 001d 0000 001e 0000 001f 0000 
08-23 08:34:05.410324                          DTC_Types     INFO PrintBuffer(...): 0x000070: 0020 0000 0021 0000 0022 0000 0023 0000 
08-23 08:34:05.410330                          DTC_Types     INFO PrintBuffer(...): 0x000080: 0024 0000 0025 0000 0026 0000 0027 0000 
08-23 08:34:05.410335                          DTC_Types     INFO PrintBuffer(...): 0x000090: 0028 0000 0029 0000 002a 0000 002b 0000 
08-23 08:34:05.410340                          DTC_Types     INFO PrintBuffer(...): 0x0000a0: 002c 0000 002d 0000 002e 0000 002f 0000 
08-23 08:34:05.410346                           mu2eUtil     INFO buffer_test(): Buffer Read 3
08-23 08:34:06.909774                           mu2eUtil     INFO buffer_test(): Total Elapsed Time: 1.5312 s.
Total Init Time: 19.685 ms.
Total Readout Request Time: 6.2187 ms.
Total Read Time: 1.5053 s.
08-23 08:34:06.909829                           mu2eUtil     INFO buffer_test(): Device Init Time: 7.4364 ms.
Device Request Time: 314.7 us.
Device Read Time: 1.4993 s.
08-23 08:34:06.909869                           mu2eUtil     INFO buffer_test(): Total Bytes Written: 0 bytes (0 bytes).
Total Bytes Read: 432 bytes (432 bytes).
08-23 08:34:06.909880                           mu2eUtil     INFO buffer_test(): Total PCIe Rate: 282.13 bytes/s (282 bytes/s)
Read Rate: 286.99 bytes/s (286 bytes/s)
Device Read Rate: 288.13 bytes/s (288 bytes/s)
#+end_src
** 4. check simple event readout                                             
#+begin_src
mu2etrk@mu2edaq09:~/test_stand/pasha_018>root.exe
   ------------------------------------------------------------------
  | Welcome to ROOT 6.28/04                        https://root.cern |
  | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |
  | Built for linuxx8664gcc on May 08 2023, 02:44:07                 |
  | From tags/v6-28-04@v6-28-04                                      |
  | With g++ (GCC) 9.3.0                                             |
  | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q'  |
   ------------------------------------------------------------------

root [0] .L srcs/otsdaq_mu2e_tracker/scripts/test_read_data.C 
root [1] test2_read_data(2,100,300,2500,4000,1,2)
08-23 08:49:59.281945                      DTC_Registers     INFO DTC_Registers(...): DTC Sim Mode is NoCFO
08-23 08:49:59.281998                      DTC_Registers     INFO DTC_Registers(...): DTC ID is 1
08-23 08:49:59.282020                      DTC_Registers     INFO SetSimMode(...): Initializing device, sim mode is NoCFO
08-23 08:49:59.294444                            DTC.cpp     INFO DTC(...): CONSTRUCTOR
0x9100: DTC status       : 0x40808404
0x9138: SERDES Reset Done: 0xbfbfbfbf
0x9158: time window      : 0x000007d0
0x91c8: debug packet type: 0x00000000
 --- read event      0 readSuccess:1 timeout:0 nbytes:   176
08-23 08:49:59.323811                          DTC_Types     CRIT PrintBuffer(...): 0x000000: 00b0 0000 0000 0000 00a8 0000 06ec 0000 
08-23 08:49:59.323834                          DTC_Types     CRIT PrintBuffer(...): 0x000010: 0000 ff01 ffff ffff 0000 0000 0100 0000 
08-23 08:49:59.323840                          DTC_Types     CRIT PrintBuffer(...): 0x000020: 0090 0000 06ec 0000 0000 ff01 ffff ffff 
08-23 08:49:59.323846                          DTC_Types     CRIT PrintBuffer(...): 0x000030: 0000 0000 0000 0000 0000 0000 0000 01ee 
08-23 08:49:59.323851                          DTC_Types     CRIT PrintBuffer(...): 0x000040: 0070 8050 0006 06ec 0000 0000 0055 0000 
08-23 08:49:59.323857                          DTC_Types     CRIT PrintBuffer(...): 0x000050: 00ac 1a68 140a 1a21 050a 0041 56aa 2aa5 
08-23 08:49:59.323862                          DTC_Types     CRIT PrintBuffer(...): 0x000060: a955 155a 56aa 2aa5 a955 155a 56aa 2aa5 
08-23 08:49:59.323868                          DTC_Types     CRIT PrintBuffer(...): 0x000070: 00ac e96b 1416 e921 0516 0041 56aa 2aa5 
08-23 08:49:59.323873                          DTC_Types     CRIT PrintBuffer(...): 0x000080: a955 155a 56aa 2aa5 a955 155a 56aa 2aa5 
08-23 08:49:59.323879                          DTC_Types     CRIT PrintBuffer(...): 0x000090: 00ac b86b 1423 b821 0523 0041 a955 155a 
08-23 08:49:59.323884                          DTC_Types     CRIT PrintBuffer(...): 0x0000a0: 56aa 2aa5 a955 155a 56aa 2aa5 a955 155a 
DTC status       : 0x40808404
debug packet type: 0x00000000
 --- read event      1 readSuccess:1 timeout:0 nbytes:   176
08-23 08:49:59.334384                          DTC_Types     CRIT PrintBuffer(...): 0x000000: 00b0 0000 0000 0000 00a8 0000 06fd 0000 
08-23 08:49:59.334396                          DTC_Types     CRIT PrintBuffer(...): 0x000010: 0000 ff01 ffff ffff 0000 0000 0100 0000 
08-23 08:49:59.334402                          DTC_Types     CRIT PrintBuffer(...): 0x000020: 0090 0000 06fd 0000 0000 ff01 ffff ffff 
08-23 08:49:59.334408                          DTC_Types     CRIT PrintBuffer(...): 0x000030: 0000 0000 0000 0000 0000 0000 0000 01ee 
08-23 08:49:59.334413                          DTC_Types     CRIT PrintBuffer(...): 0x000040: 0070 8050 0006 06fd 0000 0000 0055 0000 
08-23 08:49:59.334418                          DTC_Types     CRIT PrintBuffer(...): 0x000050: 00ac 4be8 140b 4b9b 040b 0041 a955 155a 
08-23 08:49:59.334424                          DTC_Types     CRIT PrintBuffer(...): 0x000060: 56aa 2aa5 a955 155a 56aa 2aa5 a955 155a 
08-23 08:49:59.334429                          DTC_Types     CRIT PrintBuffer(...): 0x000070: 00ac 1ae8 1418 1a9b 0418 0041 56aa 2aa5 
08-23 08:49:59.334434                          DTC_Types     CRIT PrintBuffer(...): 0x000080: a955 155a 56aa 2aa5 a955 155a 56aa 2aa5 
08-23 08:49:59.334439                          DTC_Types     CRIT PrintBuffer(...): 0x000090: 00ac e9e8 1424 e99b 0424 0041 56aa 2aa5 
08-23 08:49:59.334444                          DTC_Types     CRIT PrintBuffer(...): 0x0000a0: a955 155a 56aa 2aa5 a955 155a 56aa 2aa5 
DTC status       : 0x40808404
debug packet type: 0x00000000
08-23 08:49:59.334624                            DTC.cpp     INFO ~DTC(): DESTRUCTOR
root [2] .q
#+end_src
** after that can proceed
* ------------------------------------------------------------------------------
* [[file:root_interface.org][ROOT interface]]                                                             
* [[file:tracker_roc_registers.org][tracker ROC registers]]  
* tracker VST configurations                                                 
- all described in tfm/config                          
** trk_vst_001: one test stand, one DTC, one ROC                             
** trk_vst_002: two test stands (two ROCs), one DTC                         
** trk_vst_003: two test stands, two DTCs, two ROCs                          
- each DTC talking to its own ROC    
* <2024-02-25 Sun> changes in the ROC initialization (Monica)                

The "var_link_config" command has been split into two:

1) what I still call "var_link_config" which contains a write to register 8 and 29 
   reg. 30 has become obsolete and can be ignored

2) a roc_reset which consist ONLY in a write to register 14

The new "var_link_config" must be issued BEFORE the find_alignment/read command in the rPi.
The "roc_reset" has to be issued AFTER the rPi "read" or every time you want 
to reset to zero the various counters reported by "var_read_all".

In between mu2eUtil commands, a simple "digi_clear" is enough 
to reset the firmware in a state ready to take new event windows.

Also, I claim that no power cycles are needed now after a DTC_Reset.
And that no TIMEOUT should be observed on the very first event after a DTC_Reset.

* [[file:control_roc.org][control_ROC.py and its commands]]
* [[file:./dtc_gui.org][DtcGui interface]]
* LVHVBox : https://github.com/vlrusu/LVHVBox                                
- local repo: file:~mu2etrk/products/LVHVBox
* slow control of DTCs                                                       
** DTC_0 FPGA:  4 parameters                                                 
  -- 0x9010 : temperature
  -- 0x9014 : VCCINT
  -- 0x9018 : VCCAUX
  -- 0x901c : VCCBRAM
** readout implemented in file:../../frontends/dtc_frontend/dtc_frontend.cc
* slow control of ROCs (readSPI)                                             
** ROC_1 : SPI data:                                                         
    see file:../
    all - uint16_t

primary source : https://github.com/bonventre/trackerScripts/blob/master/constants.py#L99

|-------+----------+----------------+---------|
| index |          | parameter name | packing |
|-------+----------+----------------+---------|
|     0 | uint16_t | I3_3;          |         |
|     1 | uint16_t | I2_5;          |         |
|     2 | uint16_t | I1_8HV;        |         |
|     3 | uint16_t | IHV5_0;        |         |
|     4 | uint16_t | VDMBHV5_0;     |         |
|     5 | uint16_t | V1_8HV;        |         |
|     6 | uint16_t | V3_3HV;        |         |
|     7 | uint16_t | V2_5;          |         |
|     8 | uint16_t | A0;            |         |
|     9 | uint16_t | A1;            |         |
|    10 | uint16_t | A2;            |         |
|    11 | uint16_t | A3;            |         |
|    12 | uint16_t | I1_8CAL;       |         |
|    13 | uint16_t | I1_2;          |         |
|    14 | uint16_t | ICAL5_0;       |         |
|    15 | uint16_t | ADCSPARE;      |         |
|    16 | uint16_t | V3_3;          |         |
|    17 | uint16_t | VCAL5_0;       |         |
|    18 | uint16_t | V1_8CAL;       |         |
|    19 | uint16_t | V1_0;          |         |
|    20 | uint16_t | ROCPCBTEMP;    |         |
|    21 | uint16_t | HVPCBTEMP;     |         |
|    22 | uint16_t | CALPCBTEMP;    |         |
|    23 | uint16_t | RTD;           |         |
|    24 | uint16_t | ROC_RAIL_1V;   |         |
|    25 | uint16_t | ROC_RAIL_1_8V; |         |
|    26 | uint16_t | ROC_RAIL_2_5V; |         |
|    27 | uint16_t | ROC_TEMP;      |         |
|    28 | uint16_t | CAL_RAIL_1V;   |         |
|    29 | uint16_t | CAL_RAIL_1_8V; |         |
|    30 | uint16_t | CAL_RAIL_2_5V; |         |
|    31 | uint16_t | CAL_TEMP;      |         |
|    32 | uint16_t | HV_RAIL_1V;    |         |
|    33 | uint16_t | HV_RAIL_1_8V;  |         |
|    34 | uint16_t | HV_RAIL_2_5V;  |         |
|    35 | uint16_t | HV_TEMP;       |         |
|-------+----------+----------------+---------|

** <2023-07-12 Wed> instructions by Monica : readSPI over the fiber          
Essentially one needs to do a write to ROC address 258 (0x102) to collect a list of 36 ADCs values, 
and read them all back using a block read of the same address.
In between, there are a couple of diagnostic registers to read that will 
tell you whether the block read is ready to be executed.

How to interpret the 36 numbers read, and the conversion factor needed, 
is contained in the trackerScript/unpacker.py code, under READMONADCS.
The conversion factors listed at the end.

Enjoy!
Monica

1) rocUtil write_register -a 258 -w 0    # instructs microprocessor inside the firmware to read 36 ADC value
2) rocUtil simple_read    -a 128         # should return 0x8000 if 1) was successful
3) rocUtil simple_read    -a 129         # should return 40 (0x28) which is the number of ADC values collected in 1) plus 4
4) rocUtil block_read     -a 258 -c 36   # start a block read of 36 words

Example from DTC1:

mu2etrk@mu2edaq09:~/test_stand/monica_001>rocUtil write_register -a 258 -w 0
07-12 11:31:11.538389                           DTC_Registers     INFO DTC_Registers(...): Sim Mode is NoCFO
07-12 11:31:11.538510                           DTC_Registers     INFO DTC_Registers(...): DTC ID is 1
07-12 11:31:11.538522                           DTC_Registers     INFO SetSimMode(...): Initializing device, sim mode is NoCFO
07-12 11:31:11.551326                                 DTC.cpp     INFO DTC(...): CONSTRUCTOR
07-12 11:31:11.556697                                 DTC.cpp     INFO ~DTC(): DESTRUCTOR

mu2etrk@mu2edaq09:~/test_stand/monica_001>rocUtil simple_read -a 128
0 0x8000
mu2etrk@mu2edaq09:~/test_stand/monica_001>rocUtil simple_read -a 129
0 0x28
#+begin_src <2023-07-12 Wed> ROOT example #1                                 
root [0] DTCLib::DTC dtc(DTCLib::DTC_SimMode_NoCFO,-1,0x1,"");
07-12 14:26:09.959864                           DTC_Registers     INFO DTC_Registers(...): Sim Mode is NoCFO
07-12 14:26:09.959930                           DTC_Registers     INFO DTC_Registers(...): DTC ID is 1
07-12 14:26:09.959945                           DTC_Registers     INFO SetSimMode(...): Initializing device, sim mode is NoCFO
07-12 14:26:09.966937                           DTC_Registers     INFO SetSimMode(...): SKIPPING Initializing device
07-12 14:26:09.972616                                 DTC.cpp     INFO DTC(...): CONSTRUCTOR
root [1] using namespace DTCLib;
root [2] dtc.WriteROCRegister(DTCLib::DTC_Link_0,258,0x0000,false,100);
root [3] auto u = dtc.ReadROCRegister(DTC_Link_0,roc_address_t(128),100); printf("0x%04x\n",u);
0x8000
root [4] auto u = dtc.ReadROCRegister(DTC_Link_0,roc_address_t(129),100); printf("0x%04x\n",u);
0x0028
(int) 7
root [5] std::vector<uint16_t> dat;
root [6] dtc.ReadROCBlock(dat,DTC_Link_0,258,36,false,100)
root [7] printf("0x%04x\n",dat[0]);
0x0048
root [8] printf("0x%04x\n",dat[1]);
0x0080
root [9] printf("0x%04x\n",dat[2]);
0x0128
root [10] printf("0x%04x\n",dat[3]);
0x031c
#+end_src   
#+begin_src <2023-07-12 Wed> ROOT example #2                                 
root [0] .L srcs/otsdaq_mu2e_tracker/scripts/read_spi.C
root [1] read_spi()
07-12 16:56:55.400220                           DTC_Registers     INFO DTC_Registers(...): Sim Mode is NoCFO
07-12 16:56:55.400295                           DTC_Registers     INFO DTC_Registers(...): DTC ID is 1
07-12 16:56:55.400313                           DTC_Registers     INFO SetSimMode(...): Initializing device, sim mode is NoCFO
07-12 16:56:55.406936                           DTC_Registers     INFO SetSimMode(...): SKIPPING Initializing device
07-12 16:56:55.412049                                 DTC.cpp     INFO DTC(...): CONSTRUCTOR
0x8000
0x0028
 0x00000000: 0x0044 0x0080 0x0128 0x0324 0x0bd4 0x046c 0x0804 0x0638 
 0x00000010: 0x0350 0x03fc 0x0798 0x03a0 0x0144 0x013c 0x0328 0x0448 
 0x00000020: 0x0ffc 0x0bc8 0x0478 0x0290 0x012c 0x01c4 0x01e4 0x0868 
 0x00000030: 0x209e 0x391e 0x5075 0x131e 0x20cd 0x398a 0x50ba 0x133b 
 0x00000040: 0x20c0 0x3978 0x50ad 0x131d 
I3.3                 :      0.457
I2.5                 :      0.859
I1.8HV               :      1.987
IHV5.0               :      0.064
VDMBHV5.0            :      4.879
V1.8HV               :      1.824
V3.3HV               :      3.306
V2.5                 :      2.565
A0                   :    848.000
A1                   :   1020.000
A2                   :   1944.000
A3                   :    928.000
I1.8CAL              :      2.175
I1.2                 :      2.122
ICAL5.0              :      0.064
ADCSPARE             :      0.883
V3.3                 :      6.594
VCAL5.0              :      4.860
V1.8CAL              :      1.843
V1.0                 :      1.057
ROCPCBTEMP           :     24.170
HVPCBTEMP            :     36.416
CALPCBTEMP           :     38.994
RTD                  :      1.734
ROC_RAIL_1V(mV)      :   1043.750
ROC_RAIL_1.8V(mV)    :   1827.750
ROC_RAIL_2.5V(mV)    :   2574.625
ROC_TEMP(CELSIUS)    :     32.725
CAL_RAIL_1V(mV)      :   1049.625
CAL_RAIL_1.8V(mV)    :   1841.250
CAL_RAIL_2.5V(mV)    :   2583.250
CAL_TEMP(CELSIUS)    :     34.537
HV_RAIL_1V(mV)       :   1048.000
HV_RAIL_1.8V(mV)     :   1839.000
HV_RAIL_2.5V(mV)     :   2581.625
HV_TEMP(CELSIUS)     :     32.662
07-12 16:56:55.927739                                 DTC.cpp     INFO ~DTC(): DESTRUCTOR
#+end_src
** <2023-12-20 Wed> also implemented in the MIDAS slow monitoring : file:../../frontends/roc_frontend/roc_frontend.cc
** SPI data over the serial, unpacked                                        
#+begin_src
readSPI
(10, 72)
{'A0': 1012,
 'A1': 1244,
 'A2': 1952,
 'A3': 724,
 'ADCSPARE': 0.83,
 'CALPCBTEMP': 37.38,
 'CAL_RAIL_1.8V(mV)': '1841.250',
 'CAL_RAIL_1V(mV)': '1045.625',
 'CAL_RAIL_2.5V(mV)': '2579.250',
 'CAL_TEMP(CELSIUS)': '34.5375',
 'HVPCBTEMP': 34.48,
 'HV_RAIL_1.8V(mV)': '1839.000',
 'HV_RAIL_1V(mV)': '1044.125',
 'HV_RAIL_2.5V(mV)': '2581.625',
 'HV_TEMP(CELSIUS)': '31.9750',
 'I1.2': 2.15,
 'I1.8CAL': 2.18,
 'I1.8HV': 1.99,
 'I2.5': 0.86,
 'I3.3': 0.48,
 'ICAL5.0': 0.06,
 'IHV5.0': 0.06,
 'ROCPCBTEMP': 25.78,
 'ROC_RAIL_1.8V(mV)': '1827.750',
 'ROC_RAIL_1V(mV)': '1039.750',
 'ROC_RAIL_2.5V(mV)': '2566.750',
 'ROC_TEMP(CELSIUS)': '30.6000',
 'RTD': 1.73,
 'V1.0': 1.06,
 'V1.8CAL': 1.84,
 'V1.8HV': 1.82,
 'V2.5': 2.57,
 'V3.3': 6.59,
 'V3.3HV': 3.31,
 'VCAL5.0': 4.87,
 'VDMBHV5.0': 4.88}
#+end_src
-------------------------------------------------------------------------
** reading SPI from ROOT : file:../scripts/read_spi.C                        
#+begin_src  
root [0] .L srcs/otsdaq_mu2e_tracker/scripts/read_spi.C 
root [1] read_spi(2)
08-27 14:52:00.446941                      DTC_Registers     INFO DTC_Registers(...): DTC Sim Mode is NoCFO
08-27 14:52:00.447025                      DTC_Registers     INFO DTC_Registers(...): DTC ID is 1
08-27 14:52:00.447053                      DTC_Registers     INFO SetSimMode(...): Initializing device, sim mode is NoCFO
08-27 14:52:00.459992                            DTC.cpp     INFO DTC(...): CONSTRUCTOR
reg:128 0x8000
reg:129 val:0x0028
 0x00000000: 0x0048 0x0078 0x0138 0x0324 0x0bd4 0x046c 0x0804 0x0638 
 0x00000010: 0x0448 0x0470 0x079c 0x04f0 0x0144 0x0144 0x0328 0x0458 
 0x00000020: 0x0ffc 0x0bd0 0x0478 0x0294 0x0138 0x01c4 0x01c4 0x0864 
 0x00000030: 0x20b0 0x3960 0x50c0 0x1309 0x20a9 0x3940 0x5033 0x1313 
 0x00000040: 0x20a3 0x396e 0x50b2 0x1321 
I3.3                 :      0.483
I2.5                 :      0.806
I1.8HV               :      2.095
IHV5.0               :      0.064
VDMBHV5.0            :      4.879
V1.8HV               :      1.824
V3.3HV               :      3.306
V2.5                 :      2.565
A0                   :   1096.000
A1                   :   1136.000
A2                   :   1948.000
A3                   :   1264.000
I1.8CAL              :      2.175
I1.2                 :      2.175
ICAL5.0              :      0.064
ADCSPARE             :      0.896
V3.3                 :      6.594
VCAL5.0              :      4.873
V1.8CAL              :      1.843
V1.0                 :      1.063
ROCPCBTEMP           :     25.137
HVPCBTEMP            :     36.416
CALPCBTEMP           :     36.416
RTD                  :      1.731
ROC_RAIL_1V(mV)      :   1046.000
ROC_RAIL_1.8V(mV)    :   1836.000
ROC_RAIL_2.5V(mV)    :   2584.000
ROC_TEMP(CELSIUS)    :     31.413
CAL_RAIL_1V(mV)      :   1045.125
CAL_RAIL_1.8V(mV)    :   1832.000
CAL_RAIL_2.5V(mV)    :   2566.375
CAL_TEMP(CELSIUS)    :     32.037
HV_RAIL_1V(mV)       :   1044.375
HV_RAIL_1.8V(mV)     :   1837.750
HV_RAIL_2.5V(mV)     :   2582.250
HV_TEMP(CELSIUS)     :     32.912
08-27 14:52:00.988754                            DTC.cpp     INFO ~DTC(): DESTRUCTOR
#+end_src 
corresponding distance between the two consecutive pulses :
|-----------------+-----------+-----------|
| expected (usec) | 16.395014 | 4.1227229 |
| observed (usec) | 16.394982 | 4.1227156 |
|-----------------+-----------+-----------|

* ROC channel map (Vadim)                                                    
  https://github.com/vlrusu/ROC/blob/f8de12e250585317e4ef082cf9a7a6602be15082/utils.c#L20
* known DRAC boards                                                          
  https://docs.google.com/spreadsheets/d/1Be0-MM15hAwAviW3qs6o4NHJdIhIUzkZw7NRErRmwds/edit#gid=0
** ROC ID b5e1f : <2024-05-29 Wed> installed at TS2                          
readDeviceID
(13, 52)
{'BackLevelVer': '0x0000',
 'DesignInfo': '0x000000000000000000000000000000000000000000000000000000434f52840a',
 'DesignVer': '0x0000',
 'DeviceSerial': '0xb5e1f75f896156070a1cd2af48a397bb'}

('DRAC ROC ID #', 'b5e1f')

** ROC ID 7a7fb : <2024-05-21 Tue> installed at TS1                          

-----------------  <2024-05-21 Tue>                
readDeviceID
(13, 52)
{'BackLevelVer': '0x0000',
 'DesignInfo': '0x000000000000000000000000000000000000000000000000000000434f520b11',
 'DesignVer': '0x0000',
 'DeviceSerial': '0x7a7fb985c50dfbc734685a1212dad384'}

('DRAC ROC ID #', '7a7fb')

------------------ before            
readDeviceID
(13, 52)
{'BackLevelVer': '0x0000',
 'DesignInfo': '0x000000000000000000000000000000000000000000000000000000434f52840a',
 'DesignVer': '0x0000',
 'DeviceSerial': '0x7a7fb985c50dfbc734685a1212dad384'}

('DRAC ROC ID #', '7a7fb')
** [[file:roc_id_1b561.org][ROC ID 1b561]] : <2024-05-09 Thu> installed at TS1               
** [[file:roc_id_805d6.org][ROC ID 805d6]] : <2024-02-25 Sun> installed at TS2
* test stands TS0, TS1, TS2                     
- located in G291
| TS2 | TS0 | TS1 |
** last update  <2024-09-26 Thu> 
** powering up the test stands (Vadim):
  https://docs.google.com/document/d/1theA9NIRA5XeUUPVuFGVhU7NddPljgaGznR9aMu-Fv8/edit?usp=sharing
#+begin_src                           
mu2e@trackerpi5:~/trackerScripts$ power --list
 TS 1 : DeviceID b1 : Port /dev/ttyACM2 : Power on 
 TS 0 : DeviceID b0 : Port /dev/ttyACM1 : Power off 
 TS 2 : DeviceID b2 : Port /dev/ttyACM0 : Power on 
power --ts 1 off
deviceid=b1 port=/dev/ttyACM2
#+end_src
** TS0: currently unavailable
** TS1: serial baud rate 115200                                                
*** <2024-07-21 Sun>                                                         
(13, 52)
{'BackLevelVer': '0x0000',
 'DesignInfo': '0x000000000000000000000000000000000000000000000000000000434f525e83',
 'DesignVer': '0x0000',
 'DeviceSerial': '0x7a7fb985c50dfbc734685a1212dad384'}

('DRAC ROC ID #', '7a7fb')
*** <2024-02-23 Fri>                                                         
- serial: 57600 kbod ???. use 'control_ROC.py ... -b 57600'
readDeviceID
(13, 52)
{'BackLevelVer': '0x0000',
# 'DesignInfo': '0x000000000000000000000000000000000000000000000000000000434f52840a', ... previous
 'DesignInfo': '0x000000000000000000000000000000000000000000000000000000434f52fd41', <2024-02-25 Sun>
 'DesignVer': '0x0000',
 'DeviceSerial': '0x1b561170e1a31d8ce76538eff83552dc'}

('DRAC ROC ID #', '1b561')
** TS2: serial baud rate 115200                                              
mu2e@trackerpi5:~/trackerScripts $ python3 control_ROC.py --ts 2 -b 115200
SERIALRATE= 115200
Waiting for ARM to connect
==========================
('Connected to ARM on', '/dev/ttyUSB1')
readDeviceID
(13, 52)
{'BackLevelVer': '0x0000',
 'DesignInfo': '0x000000000000000000000000000000000000000000000000000000434f523d42', <2024-02-25 Sun>
 'DesignVer': '0x0000',
 'DeviceSerial': '0x805d653a1e62bc2ea2257c13224ecbef'}

('DRAC ROC ID #', '805d6')
* DRAC Tower6                                                                
- new PI ...  mu2e@ ... (local)
** window 1: cd ~/LVHVBox/GServer/build
              sudo ~/Server
              response: Pico 1 will be used
** window 2: cd ~/LVHVBox/Client
              python3 Client.py
** Commands:
 - powerOn  1       # [or 2 or 3 ... 0=all)
 - powerOff 1       # same semantics
 - readMonI6 .. readMonI48 .. readMonV6 .. readMonV48
* ------------------------------------------------------------------------------
* how to download firmware to DRAC from .job file (Monica)                   
<2023-12-13 Wed> Monica

1) Login to ppd-130027.fnal.gov

2) launch "Microchip Libero Soc v 2022.3 > FPExpress v2022.3"

3)  click on  "New".... under Job Projects 

4) Browse to FlashPro Express job file
     C:/Users/Public/Public Documents/job_files/ROC_FW_work_wo_DTCSim.job

5) In the "Create New Job Project" window, browse to folder
     C:/Users/Public/Public Documents/job_files/

6) Clock OK

7) Select the programmer attached to the ROC, if more than one are present (S201QNXR6 is the default one)

8) Press Run

Note that a directory-with-the-same-name-as-the-job-file will be created in that folder.

Next time around, you can just select "Open" under Job Project, navigate to the .pro file you will find in the 
directory-with-the-same-name-as-the-job-file, and skip to step 6).

NB: Sometimes, when you select "New" and the directory-with-the-same-name-as-the-job-file is present, 
    an error message will appear in the "Create New Job Project" window window.  
    Either select "Open" or delete the directory-with-the-same-name-as-the-job-file before selecting New.

Enjoy!
Monica
* ------------------------------------------------------------------------------
